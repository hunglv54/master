var indexOf=[].indexOf||function(t){for(var e=0,r=this.length;r>e;e++)if(e in this&&this[e]===t)return e;return-1};define("modules/clean/react/dropins/contact_import_button",["modules/core/exception","external/react","modules/clean/profile_services/profile_services_constants","modules/clean/profile_services/profile_services_link","modules/clean/react/button","modules/core/notify","modules/core/i18n"],function(t,e,r,o,n,s,i){var a,c,l,p,u,d,m,h,_,f,v,I,C,y,g;return h=t.assert,p=o.LinkedProfileServices,u=o.ProfileServicesLinkingHandler,f=n.button,m=i._,a=f,v=e.addons.classSet,y=e.PropTypes,g=y.string,I=y.func,_=y.bool,C=y.number,d=function(){function t(t){var e;this.providerType=t.providerType,this.referrer=t.referrer,this.userId=t.userId,h((e=this.providerType,indexOf.call(r.contact_services(),e)>=0),"invalid third party contact provider "+this.providerType),this._dialog=null,this._closePopupPollId=-1,this._linkHandler=new u,this._profileServices=p.get_linked_profile_services_for_user(this.userId)}return t.prototype.dialogClosePollInterval=100,t.prototype._startCloseDialogWatcher=function(t,e){return t?this._closePopupPollId=setInterval(function(r){return function(){return t.closed?(e(),clearInterval(r._closePopupPollId)):void 0}}(this),this.dialogClosePollInterval):void 0},t.prototype._preloadImportHandler=function(t,e){return function(r){return clearInterval(this._closePopupPollId),r.success?t.apply(null,arguments):e.apply(null,arguments)}},t.prototype.getServiceConnectionStatus=function(t){return p.get_linked_profile_services_for_user(this.userId,function(e){return function(){var r;return r=e._profileServices.service_is_connected(e.providerType),t(r)}}(this))},t.prototype["import"]=function(t){var e,r,o;return o=t.onComplete,e=t.onAlreadyImported,r=t.onCancelled,null==o&&(o=function(){}),null==e&&(e=function(){}),null==r&&(r=function(){}),this.getServiceConnectionStatus(function(t){return function(n){return n?void e():(t._linkHandler.auth_service_with_user(t.providerType,t.userId,t._preloadImportHandler(o,r),t.referrer),t._startCloseDialogWatcher(t._linkHandler._popup_window,r))}}(this))},t}(),c=e.createClass({displayName:"ContactImportButton",propTypes:{providerType:g.isRequired,userId:g.isRequired,onContactsImported:I},contactImporter:null,getDefaultProps:function(){return{onContactsImported:function(){}}},getInitialState:function(){return{isInProgress:!1,isComplete:!1,shouldDisplay:!1}},componentWillMount:function(){return this.contactImporter=new d({providerType:this.props.providerType,referrer:"suggestion",userId:this.props.userId}),this.contactImporter.getServiceConnectionStatus(function(t){return function(e){return t.setState({shouldDisplay:!e,isComplete:e})}}(this))},handleContactsImported:function(t){var e;return u.show_import_notifications(t),this.setState({isInProgress:!1,isComplete:!0}),(e=this.props).onContactsImported.apply(e,arguments)},handleCancelImportContacts:function(){return this.setState({isInProgress:!1})},handleContactsAlreadyImported:function(){var t;return t=r.to_name(this.props.providerType),this.setState({isInProgress:!1,isComplete:!0}),s.success(m("You're already connected to %(service_name)s").format({service_name:t}))},importContactsFromService:function(){return this.setState({isInProgress:!0}),this.contactImporter["import"]({onComplete:this.handleContactsImported,onAlreadyImported:this.handleContactsAlreadyImported,onCancelled:this.handleCancelImportContacts})},onButtonClicked:function(){return this.importContactsFromService()},render:function(){return e.createElement(l,{providerType:this.props.providerType,isInProgress:this.state.isInProgress,isComplete:this.state.isComplete,onButtonClick:this.onButtonClicked,shouldDisplay:this.state.shouldDisplay})}}),l=e.createClass({displayName:"ContactImportButtonView",propTypes:{providerType:g,isInProgress:_,isComplete:_,onButtonClick:I,shouldDisplay:_},providerNameMap:{1:"google",2:"yahoo",3:"facebook",4:"twitter",5:"yahoo-legacy",6:"mobile"},getDefaultProps:function(){return{isInProgress:!1,isComplete:!1,onButtonClick:function(){},shouldDisplay:!0}},onButtonClick:function(t){return t.preventDefault(),this.props.onButtonClick()},renderButtonOrStatus:function(){var t;return this.props.isInProgress||this.props.isComplete?(t={"contact-import__status":!0,"contact-import__status--loading":this.props.isInProgress&&!this.props.isComplete,"contact-import__status--complete":this.props.isComplete},e.createElement("div",{className:v(t)},e.createElement("span",{className:"contact-import__status-text"},this.props.isComplete?m("Imported!"):void 0),e.createElement("span",{className:"contact-import__status-icon"}))):e.createElement(a,{onClick:this.onButtonClick,className:"contact-import__button",importance:"secondary"},"Import")},render:function(){var t,r,o,n;return n={"contact-import":!0,"contact-import--disabled":!this.props.shouldDisplay},o=this.providerNameMap[this.props.providerType],t={"contact-import__service":!0},t["contact-import__service--"+o]=!0,r=t,e.createElement("div",{className:v(n)},e.createElement("span",{className:v(r)},"Gmail Contacts"),this.renderButtonOrStatus())}}),{ThirdPartyContactProvider:d,ContactImportButton:c,ContactImportButtonView:l}});var bind=function(t,e){return function(){return t.apply(e,arguments)}};define("modules/clean/sharing/experiments/share_invite_modal",["jquery","external/react","modules/clean/profile_services/profile_services_constants","modules/clean/react/dropins/contact_import_button"],function(t,e,r,o){var n,s;return n=o.ContactImportButton,s=function(){function o(e){this.settings=e,this.before_show_handler=bind(this.before_show_handler,this),t(document).on(o.BEFORE_SHOW_EVENT,this.before_show_handler)}return o.BEFORE_SHOW_EVENT="db:invite_to_new_shared_folder_wizard_modal:before_show",o.prototype.before_show_handler=function(){var o,s;return o=t(".sf-invite-modal__contact-import-button").get(0),s=e.createElement(n,{providerType:r.GOOGLE,userId:this.settings.userId}),e.render(s,o)},o}()});